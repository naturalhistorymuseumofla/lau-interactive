var isMobile=screen.height<719||screen.width<1023;isMobile&&document.documentElement.setAttribute("data-mobile","true"),require(["esri/Map","esri/views/MapView","esri/layers/FeatureLayer","esri/layers/GraphicsLayer","esri/Graphic","esri/layers/VectorTileLayer","esri/widgets/Zoom/ZoomViewModel","esri/layers/support/LabelClass","esri/views/2d/layers/BaseLayerViewGL2D","esri/core/promiseUtils","esri/core/watchUtils","esri/geometry/support/webMercatorUtils","esri/geometry/Polygon"],function(e,t,n,a,i,s,r,o,l,c,m,d,u){var h=v(),f=function(){const i=new s({portalItem:{id:"43ed5ecba7dd4a75b1395c2f3fa3951b"}});var l=new e;function c(){const e=window.screen.width,t=window.screen.height,n=t*e;return n>7e5?7e5+.1*(1e6-n/2):1e6-n/2+7e5}var m=new t({container:"viewDiv",map:l,center:[-118.215,34.225],scale:c(),constraints:{snapToZoom:!1,rotationEnabled:!1,minZoom:function(){const e=window.screen.width,t=window.screen.height;window.devicePixelRatio;return t*e<8e5?7:8}(),maxZoom:14,geometry:{type:"extent",xmin:-121.5,ymin:32.7,xmax:-114.7,ymax:36}},popup:{autoOpenEnabled:!1},highlightOptions:{color:[42,208,212,.75],fillOpacity:.4},ui:{components:[]}});const d=new r({view:m}),u={type:"simple",symbol:{type:"simple-marker",size:0}},h=new o({labelExpressionInfo:{expression:"$feature.NAME"},labelPlacement:"above-center",symbol:{type:"text",color:"rgb(199, 199, 199))",haloSize:.5,haloColor:"rgb(66,66,66)",font:{family:"Avenir Next LT Pro Regular",weight:"bold",size:13}}}),f=new o({labelExpressionInfo:{expression:"$feature.NAME"},labelPlacement:"above-center",symbol:{type:"text",color:"rgb(199, 199, 199)",haloSize:.5,haloColor:"rgb(66,66,66)",deconflictionStrategy:"static",font:{family:"Avenir Next LT Pro Regular",weight:"normal",size:9.5}}}),g=new o({labelExpressionInfo:{expression:"Replace(Trim($feature.name), ' ', TextFormatting.NewLine)"},symbol:{type:"text",color:"rgb(199, 199, 199)",haloSize:.5,haloColor:"rgb(66,66,66)",deconflictionStrategy:"static",font:{family:"Avenir Next LT Pro Regular",weight:"bold",size:9}}});const p=new n({title:"Areas",spatialReference:{wkid:4326},fields:[{name:"region_type",alias:"Region Type",type:"string"},{name:"objectId",alias:"ObjectId",type:"oid"},{name:"name",alias:"Name",type:"string"},{name:"legacyId",alias:"Legacy object ID",type:"string"}],objectIdField:"objectId",geometryType:"polygon",outFields:["*"],source:[],renderer:{type:"simple",symbol:{type:"simple-fill",style:"none",outline:{color:[15,15,15,.75],width:"2px"}}},labelingInfo:[g]}),y=new n({url:"https://services3.arcgis.com/pIjZlCuGxnW1cJpM/arcgis/rest/services/lauLocalitiesView/FeatureServer",renderer:{type:"simple",symbol:{type:"simple-marker",size:6,color:[67,120,116,.5],outline:{width:0,color:[67,120,116,.1]}}},title:"localityLayer",objectIdField:"ObjectId",outFields:["ObjectId","site"]}),b=new n({url:"https://services3.arcgis.com/pIjZlCuGxnW1cJpM/arcgis/rest/services/lauCountiesCentroids/FeatureServer",renderer:u,labelingInfo:[h],maxScale:6e5,outFields:["name"]}),v=new n({url:"https://services3.arcgis.com/pIjZlCuGxnW1cJpM/arcgis/rest/services/lauRegionsCentroids/FeatureServer",renderer:u,labelingInfo:[f],minScale:6e5,maxScale:188895,outFields:["name"]}),w=new n({url:"https://services3.arcgis.com/pIjZlCuGxnW1cJpM/arcgis/rest/services/lauNeighborhoodsCentroids/FeatureServer",renderer:u,labelingInfo:[f],minScale:188895,outFields:["name"]}),L=a.createSubclass({createLayerView:function(e){if("2d"===e.type)return new _({view:e,layer:this})}}),E=new s({portalItem:{id:"6e3c7ac158dd401c81f0075c1a97543b"}}),x=new a({effect:"drop-shadow(0px, 2px, 2px rgba(63, 153, 149, 0.75))"}),N=new a({labelingInfo:[l.areasLabelClass]}),C=new L,S=[i,N,p,w,v,b,E,y,x,C];var F;l.addMany(S),isMobile&&(F=new CupertinoPane(".cupertino-pane",{parentElement:".ui-top-left",breaks:{middle:{enabled:!1,height:300},bottom:{enabled:!0,height:100,bounce:!0}},cssClass:"card--active",simulateTouch:!0,initialBreak:"bottom",buttonDestroy:!1,onDrag:()=>console.log("Drag event")}));m.whenLayerView(y).then(e=>{A.localitiesView=e});for(let e of document.getElementsByClassName("widget"))e.style.opacity="1";var T=document.getElementsByClassName("ui-container");for(let e of T)m.ui.add(e);var A={map:l,view:m,scale:c(),zoomViewModel:d,countiesMaxScale:6e5,regionsMaxScale:188895,areaGraphics:x,intersectingGraphicsLayer:N,selectedPhotoGraphicsLayer:C,clientFeatureLayer:p,infoPane:F,areasLayer:E,areasLabelClass:g,intersectingFeatures:0,selectedFeature:{name:"",region:""}};return A}();function g(e,t){e?(f.selectedFeature.name=e.attributes.name,f.selectedFeature.region="county"==f.currentFeature.region?"region":"region"==f.currentFeature.region?"neighborhood":""):f.selectedFeature.name="",async function(e){const t=f.view.scale;let n=t>6e5?"county":6e5>t&&t>188895?"region":"neighborhood";const a={latitude:e.latitude,longitude:e.longitude,region:n,currentFeature:"currentFeature"in f?f.currentFeature:"",selectedFeature:f.selectedFeature.name?f.selectedFeature:""};let i=await fetch("/spatial-query",{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(a)}),s=await i.text();return s?JSON.parse(s):s}(t).then(e=>{e?(f.currentFeature={name:e.name,region:e.region},function(e){const t=e.geometry,n=new u,a="MultiPolygon"===t.type?t.coordinates.flat(1):t.coordinates;n.rings=a;const s=new i({geometry:n,attributes:{name:e.name,region_type:e.region},labelPlacement:"always-horizontal",symbol:{type:"simple-fill",color:[73,128,123,.15],outline:{color:[73,128,123,1],width:4}}});f.areaGraphics.graphics.removeAll(),f.areaGraphics.graphics.add(s),function(e,t){const n=-e.extent.width/2,a={animate:!0,duration:800,ease:"ease-in"},i={true:{"Los Angeles":{center:[-118.3,34.25],scale:p()},"Santa Barbara":{center:[-120.1,34.8]},default:e},false:{"Los Angeles":{center:[-118.735491,34.222515],scale:p()},Ventura:{center:[-119.254898,34.515522],scale:p()},default:{center:e.extent.expand(2).offset(n,0)}}};t in i[isMobile]?f.view.goTo(i[isMobile][t],a).catch(function(e){"AbortError"!=e.name&&console.error(e)},a):f.view.goTo(i[isMobile].default,a).catch(function(e){"AbortError"!=e.name&&console.error(e)},a)}(n,e.name)}(e),"county"!==e.region&&"region"!=e.region||async function(e){const t="county"==e.region?"region":"neighborhood",n={name:e.name,region:t};let a=await fetch("/intersecting-areas-query",{method:"POST",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(n)}),i=await a.text();return i?JSON.parse(i):i}(e).then(e=>{!function(e){y();const t=[];e.forEach(e=>{let n=new u,a="MultiPolygon"===e.geometry.type?e.geometry.coordinates.flat(1):e.geometry.coordinates;n.rings=a;let s=new i({geometry:n,attributes:{name:e.name,region_type:e.region},labelPlacement:"always-horizontal",symbol:{type:"simple-fill",style:"none",outline:{color:[15,15,15,.75],width:"2px"}}});t.push(s)}),b({addFeatures:t})}(e.features)}),e.number_of_sites?function(e){const t=document.getElementsByClassName("taxa--info")[0],n=document.getElementsByClassName("taxa--null")[0],a=document.getElementById("photos"),i=document.getElementsByClassName("photos--null")[0],s=document.getElementsByClassName("photo-indicator")[0];let r=document.getElementsByClassName("photos__button"),o=document.getElementsByClassName("time__button");isMobile?(C(document.getElementsByClassName("null-card__content")[0]),document.getElementsByClassName("info-card__content")[0].style.display="block"):C("#noInfoCard");f.highlight?f.highlight.remove():f.highlight,f.highlight=f.localitiesView.highlight(e.oids);for(let t of document.getElementsByClassName("featureName"))t.innerText=e.name;document.querySelector(".excavation-number[lang=en]").innerHTML=`${e.number_of_sites.toLocaleString()}`,document.querySelector(".excavation-number[lang=es]").innerHTML=`${e.number_of_sites.toLocaleString("es")}`;const l=document.getElementsByClassName("taxa__list");for(let e of l)e.innerHTML="";if(e.number_of_specimens>0){T(n,!1),T(t,!0);const a=e.taxa,i=Object.values(a).reduce((e,t)=>e+t);document.querySelector(".fossils-found[lang=en]").innerHTML=i.toLocaleString(),document.querySelector(".fossils-found[lang=es]").innerHTML=i.toLocaleString("es"),function(e){let t={"Clams, oysters":{fileName:"clam",category:"invertebrate",es:"Almejas, ostras, vieiras",en:"Clams, oysters, scallops"},Snails:{fileName:"snail",category:"invertebrate",es:"Caracoles",en:"Snails"},"Sea urchins":{fileName:"urchin",category:"invertebrate",es:"Erizos de mar",en:"Sea urchins"},Worms:{fileName:"worm",category:"invertebrate",es:"Gusanos",en:"Worms"},"Crabs, shrimps":{fileName:"crab",category:"invertebrate",es:"Cangrejos, camarones",en:"Crabs, shrimp"},Nautiloids:{fileName:"ammonoid",category:"invertebrate",es:"Ammoniodeos, nautiloideos, pulpos",en:"Ammonoids, nautiloids, octopuses"},Corals:{fileName:"coral",category:"invertebrate",es:"Corales",en:"Corals"},Barnacles:{fileName:"barnacle",category:"invertebrate",es:"Percebes",en:"Barnacles"},Scaphopods:{fileName:"scaphopod",category:"invertebrate",es:"Conchas colmillo",en:"Tusk shells"},"Sharks, rays":{fileName:"shark",category:"vertebrate",es:"Tiburones, rayas",en:"Sharks, rays"},Fish:{fileName:"fish",category:"vertebrate",es:"Peces",en:"Fish"},Birds:{fileName:"bird",category:"vertebrate",es:"Aves",en:"Birds"},"Whales, dolphins":{fileName:"whale",category:"vertebrate",es:"Ballenas, delfines",en:"Whales, dolphins"},Microfossils:{fileName:"magnifying-glass",category:"invertebrate",es:"MicrofÃ³siles",en:"Microfossils"},"Walruses, seals":{fileName:"walrus",category:"vertebrate",es:"Focas, otarios, morsas",en:"Seals, sea lions, walruses"}},n=document.createDocumentFragment(),a=document.createDocumentFragment();const i=document.getElementsByClassName("vert__list")[0],s=document.getElementsByClassName("invert__list")[0],r=Object.entries(e).sort((e,t)=>t[1]-e[1]);for(const e of r){let i,s;[i,s]=e;let r=document.createElement("div"),o=document.createElement("img");if(t[i]){const e=t[i].fileName,l=t[i].category,c=t[i].es,m=t[i].en;o.src=`/static/images/${e}.svg`;const d=document.createElement("p"),u=document.createElement("p");d.lang="en",u.lang="es",r.classList.add("taxa__cell"),o.classList.add("taxa__icon"),d.innerHTML=`${s.toLocaleString()}<br>${m}`,u.innerHTML=`${s.toLocaleString("es")}<br>${c}`,r.append(o,d,u),"invertebrate"===l?n.append(r):"vertebrate"===l&&a.append(r)}}s.append(n),i.append(a)}(a)}else T(t,!1),T(n,!0);if(e.photos.length>0){for(let e of r)e.classList.remove("button--removed");!function(e){!function(){const e=document.getElementsByClassName("splide__list")[0],t=document.getElementsByClassName("splide__pagination")[0];e.innerHTML="",t&&t.remove()}();const t=document.createDocumentFragment(),n=document.getElementsByClassName("splide__list")[0];e.forEach(e=>{const n=document.createElement("img"),a=document.createElement("li"),i=function(e){const t=document.createElement("p"),n=document.createElement("p"),a=document.createElement("p"),i=document.createElement("p"),s=document.createElement("div");return t.classList.add("caption__taxon"),a.classList.add("caption__description"),t.innerHTML=e.taxon,n.innerHTML=e.age.replace(" - ","-").toLowerCase(),a.innerHTML=e.description,i.innerHTML=`${e.display_id}`,s.classList.add("splide__captions"),s.append(a,t,n,i),s}(e);n.src="https://fossilmap.sfo3.cdn.digitaloceanspaces.com/images/"+e.key+"_500px.png",a.classList.add("splide__slide");const s=t.appendChild(a),r=document.createElement("div");r.className="splide__slide--imageContainer",s.appendChild(r).appendChild(n),s.appendChild(i)}),n.append(t),h=v(),w(e[0].point.coordinates),h.on("visible",t=>{const n=Array.from(t.slide.parentElement.children),a=n.indexOf(t.slide);w(e[a].point.coordinates)}),T(sliderDiv,!0)}(e.photos),T(a,!0),T(i,!1),T(s,!0)}else{for(let e of r)e.classList.add("button--removed");T(a,!1),T(s,!1)}S("#infoCard"),isMobile&&f.infoPane.present({animate:!0});null!==e.endDate&&null!=e.startDate?(T(document.getElementById("time"),!0),B(o,!0),0===e.endDate&&(e.endDate=.0117),function(e,t){const n=document.getElementById("indicator"),a=document.getElementsByClassName("timescale__container")[0],i=(e=e>100?100:e)-t;n.style.right=`${t/100*100}%`;const s=a.clientWidth/100;n.style.width=`${s*i}px`}(e.startDate,e.endDate),function(e,t){let n,a;[n,a]=document.getElementsByClassName("time__range"),e>1&&t>1?(t=t.toFixed(0),e=e.toFixed(0),n.innerHTML=`${t}-${e} million years old`,a.innerHTML=`${t} y ${e} millones de aÃ±os de antigÃ¼edad.`):e>1&&t<1?(t=(1e3*t).toFixed(0),e=e.toFixed(0),n.innerHTML=`${t} thousand-${e} million years old`,a.innerHTML=`${t} miles y ${e} millones de aÃ±os de antigÃ¼edad.`):e<1&&t<1&&(t=(1e3*t).toFixed(0),e=(1e3*e).toFixed(0),n.innerHTML=`${t}-${e} thousands of years old`,a.innerHTML=`${t} y ${e} miles de aÃ±os de antigÃ¼edad.`)}(e.startDate,e.endDate)):(T(document.getElementById("time"),!1),B(o,!1));$(".card__content").animate({scrollTop:10},50)}(e):function(e){if(isMobile)C(document.getElementsByClassName("info-card__content")[0]),S(document.getElementsByClassName("null-card__content")[0]);else{const e=document.getElementById("infoCard");"none"!=e.style.display?(C(e),setTimeout(()=>{S("#noInfoCard")},550)):S("#noInfoCard")}for(let t of document.getElementsByClassName("featureName"))t.innerText=e}(e.name)):E()})}function p(){let e=window.innerHeight*window.innerWidth;return void 0/e*1e3}function y(){if(f.intersectingFeatures){b({deleteFeatures:f.intersectingFeatures})}}function b(e){f.clientFeatureLayer.applyEdits(e).then(function(e){if(e.deleteFeatureResults.length>0&&(f.intersectingFeatures=0),e.addFeatureResults.length>0){f.intersectingFeatures=e.addFeatureResults.length;var t=[];e.addFeatureResults.forEach(function(e){t.push(e.objectId)}),f.intersectingFeatures=t.map(e=>({objectId:e})),f.clientFeatureLayer.queryFeatures({objectIds:t})}}).catch(function(e){console.log(e)})}function v(){return new Splide(".splide",{}).mount()}function w(e){var t=d.geographicToWebMercator({type:"point",longitude:e[0],latitude:e[1]});const n=new i({geometry:t,symbol:{type:"simple-marker",style:"circle",color:"orange",size:"12px",outline:{color:[255,255,0],width:2}}});f.selectedPhotoGraphicsLayer.removeAll(),f.selectedPhotoGraphicsLayer.add(n)}const _=l.createSubclass({aPosition:0,aOffset:1,constructor:function(){this.transform=mat3.create(),this.translationToCenter=vec2.create(),this.screenTranslation=vec2.create(),this.display=mat3.fromValues(NaN,0,0,0,NaN,0,-1,1,1),this.screenScaling=vec3.fromValues(NaN,NaN,1),this.needsUpdate=!1;const e=()=>{this.needsUpdate=!0,this.requestRender()};this.watcher=m.on(this,"layer.graphics","change",e,e,e)},attach:function(){const e=this.context,t=e.createShader(e.VERTEX_SHADER);e.shaderSource(t,"\n        precision highp float;\n        uniform mat3 u_transform;\n        uniform mat3 u_display;\n        attribute vec2 a_position;\n        attribute vec2 a_offset;\n        varying vec2 v_offset;\n        const float SIZE = 55.0;\n        void main(void) {\n            gl_Position.xy = (u_display * (u_transform * vec3(a_position, 1.0) + vec3(a_offset * SIZE, 0.0))).xy;\n            gl_Position.zw = vec2(0.0, 1.0);\n            v_offset = a_offset;\n        }"),e.compileShader(t);const n=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(n,"\n        precision highp float;\n        uniform float u_current_time;\n        varying vec2 v_offset;\n        const float PI = 3.14159;\n        const float N_RINGS = 2.0;\n        const vec3 COLOR = vec3(0.95, 0.92, 0.33);\n        const float FREQ = 0.35;\n        void main(void) {\n            float l = length(v_offset);\n            float intensity = clamp(cos(l * PI), 0.0, 1.0) * clamp(cos(2.0 * PI * (l * 2.0 * N_RINGS - FREQ * u_current_time)), 0.0, 1.0);\n            gl_FragColor = vec4(COLOR * intensity, intensity);\n        }"),e.compileShader(n),this.program=e.createProgram(),e.attachShader(this.program,t),e.attachShader(this.program,n),e.bindAttribLocation(this.program,this.aPosition,"a_position"),e.bindAttribLocation(this.program,this.aOffset,"a_offset"),e.linkProgram(this.program),e.deleteShader(t),e.deleteShader(n),this.uTransform=e.getUniformLocation(this.program,"u_transform"),this.uDisplay=e.getUniformLocation(this.program,"u_display"),this.uCurrentTime=e.getUniformLocation(this.program,"u_current_time"),this.vertexBuffer=e.createBuffer(),this.indexBuffer=e.createBuffer(),this.indexBufferSize=0,this.centerAtLastUpdate=vec2.fromValues(this.view.state.center[0],this.view.state.center[1])},detach:function(){this.watcher.remove();const e=this.context;e.deleteBuffer(this.vertexBuffer),e.deleteBuffer(this.indexBuffer),e.deleteProgram(this.program)},render:function(e){const t=e.context,n=e.state;this.updatePositions(e),0!==this.indexBufferSize&&(mat3.identity(this.transform),this.screenTranslation[0]=n.pixelRatio*n.size[0]/2,this.screenTranslation[1]=n.pixelRatio*n.size[1]/2,mat3.translate(this.transform,this.transform,this.screenTranslation),mat3.rotate(this.transform,this.transform,Math.PI*n.rotation/180),this.screenScaling[0]=n.pixelRatio/n.resolution,this.screenScaling[1]=-n.pixelRatio/n.resolution,mat3.scale(this.transform,this.transform,this.screenScaling),mat3.translate(this.transform,this.transform,this.translationToCenter),this.display[0]=2/(n.pixelRatio*n.size[0]),this.display[4]=-2/(n.pixelRatio*n.size[1]),t.useProgram(this.program),t.uniformMatrix3fv(this.uTransform,!1,this.transform),t.uniformMatrix3fv(this.uDisplay,!1,this.display),t.uniform1f(this.uCurrentTime,performance.now()/1e3),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.enableVertexAttribArray(this.aPosition),t.enableVertexAttribArray(this.aOffset),t.vertexAttribPointer(this.aPosition,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(this.aOffset,2,t.FLOAT,!1,16,8),t.enable(t.BLEND),t.blendFunc(t.ONE,t.ONE_MINUS_SRC_ALPHA),t.drawElements(t.TRIANGLES,this.indexBufferSize,t.UNSIGNED_SHORT,0),this.requestRender())},hitTest:function(e,t){const n=this.view;if(0===this.layer.graphics.length)return c.resolve(null);const a=this.layer.graphics.map(a=>{const i=n.toScreen(a.geometry);return Math.sqrt((i.x-e)*(i.x-e)+(i.y-t)*(i.y-t))});let i=0;if(a.forEach((e,t)=>{e<a.getItemAt(i)&&(i=t)}),a.getItemAt(i)>35)return c.resolve(null);const s=this.layer.graphics.getItemAt(i);return s.sourceLayer=this.layer,c.resolve(s)},updatePositions:function(e){const t=e.context,n=e.stationary,a=e.state;if(!n)return vec2.sub(this.translationToCenter,this.centerAtLastUpdate,a.center),void this.requestRender();if(!this.needsUpdate&&0===this.translationToCenter[0]&&0===this.translationToCenter[1])return;this.centerAtLastUpdate.set(a.center),this.translationToCenter[0]=0,this.translationToCenter[1]=0,this.needsUpdate=!1;const i=this.layer.graphics;t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer);const s=new Float32Array(16*i.length);let r=0;i.forEach(e=>{const t=e.geometry,n=t.x-this.centerAtLastUpdate[0],a=t.y-this.centerAtLastUpdate[1];s[16*r+0]=n,s[16*r+1]=a,s[16*r+2]=-.5,s[16*r+3]=-.5,s[16*r+4]=n,s[16*r+5]=a,s[16*r+6]=.5,s[16*r+7]=-.5,s[16*r+8]=n,s[16*r+9]=a,s[16*r+10]=-.5,s[16*r+11]=.5,s[16*r+12]=n,s[16*r+13]=a,s[16*r+14]=.5,s[16*r+15]=.5,++r}),t.bufferData(t.ARRAY_BUFFER,s,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer);let o=new Uint16Array(6*i.length);for(let e=0;e<i.length;++e)o[6*e+0]=4*e+0,o[6*e+1]=4*e+1,o[6*e+2]=4*e+2,o[6*e+3]=4*e+1,o[6*e+4]=4*e+3,o[6*e+5]=4*e+2;t.bufferData(t.ELEMENT_ARRAY_BUFFER,o,t.STATIC_DRAW),this.indexBufferSize=o.length}});document.addEventListener("click",N,{once:!0});var L=setInterval(M,6e4);function E(){F(),function(){const e=document.getElementsByClassName("content-card");for(let t of e)C(t);isMobile&&f.infoPane.hide({animate:!0})}(),T(document.getElementsByClassName("photo-indicator")[0],!1),f.view.focus()}document.addEventListener("click",function(e){clearInterval(L),L=setInterval(M,6e4),e.target.classList.contains("close-button")?E():"zoomIn"===e.target.id?f.zoomViewModel.zoomIn():"zoomOut"===e.target.id&&f.zoomViewModel.zoomOut()}),document.addEventListener("touchstart",function(e){clearInterval(L),L=setInterval(M,6e4),e.target.classList.contains("close-button")&&E()},{passive:!0}),document.addEventListener("mousewheel",function(){clearInterval(L),L=setInterval(M,6e4)},{passive:!0}),f.view.on("click",function(e){e.preventDefault(),function(e){const t=f.view.toMap(e);f.intersectingFeatures?f.view.hitTest(e,{include:f.clientFeatureLayer}).then(e=>{e.results[0]?(F(),g(e.results[0].graphic,t)):(F(),g(null,t))}):(F(),g(null,t))}(e)});const x=document.getElementById("languageSwitch");function N(){const e=document.getElementsByClassName("instructions")[0],t=document.getElementsByClassName("instructions__container")[0];e.classList.add("instructions--inactive"),t.classList.add("instructions--inactive"),setTimeout(()=>{t.style.display="None"},750)}function C(e){const t="object"==typeof e?e:document.querySelector(e);t.classList.remove("card--active"),setTimeout(()=>{A(t,!1)},550)}function S(e){const t="object"==typeof e?e:document.querySelector(e);A(t,!0),setTimeout(()=>{t.classList.add("card--active")},5)}function F(){f.view.graphics.removeAll(),f.intersectingGraphicsLayer.removeAll(),f.areaGraphics.graphics.removeAll(),y(),f.selectedFeature={name:"",region:""},"intersectingAreas"in f&&(f.map.layers.remove(f.intersectingAreas),delete f.intersectingAreas),"highlightLayer"in f&&(f.map.layers.remove(f.highlightLayer),delete f.highlightLayer),f.selectedPhotoGraphicsLayer.graphics.removeAll(),f.highlight?f.highlight.remove():f.highlight}function T(e,t){e.style.display=t?"flex":"none"}function A(e,t){e.style.display=t?"inline-block":"none"}function B(e,t){if(t)for(let t of e)t.classList.remove("button--removed");else for(let t of e)t.classList.add("button--removed")}function M(){E(),f.view.goTo({center:[-118.215,34.225],scale:f.scale},{animate:!0,duration:400,ease:"ease-in"}),isMobile&&f.infoPane.destroy();const e=document.getElementsByClassName("instructions")[0],t=document.getElementsByClassName("instructions__container")[0];T(t,!0),T(e,!0),e.classList.remove("instructions--inactive"),t.classList.remove("instructions--inactive"),document.addEventListener("click",N,{once:!0})}x.addEventListener("change",()=>{x.checked?document.body.setAttribute("lang","es"):document.body.setAttribute("lang","en")})});